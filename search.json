[{"path":"https://obenno.github.io/scSpotlight/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"https://obenno.github.io/scSpotlight/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"https://obenno.github.io/scSpotlight/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"https://obenno.github.io/scSpotlight/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"https://obenno.github.io/scSpotlight/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"https://obenno.github.io/scSpotlight/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"https://obenno.github.io/scSpotlight/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"https://obenno.github.io/scSpotlight/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"https://obenno.github.io/scSpotlight/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"https://obenno.github.io/scSpotlight/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"https://obenno.github.io/scSpotlight/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright [yyyy] [name of copyright owner]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"https://obenno.github.io/scSpotlight/articles/scSpotlight.html","id":"seurat-analysis-workflow","dir":"Articles","previous_headings":"","what":"Seurat Analysis Workflow","title":"Introduction to scSpotlight","text":"scSpotlight uses Seurat standard single cell analysis workflow, recommend new users going pbmc3k tutorial better understand processing step. demonstration dataset used 2,700 Peripheral Blood Mononuclear Cells (PBMCs) sample made publicly available 10X Genomics. matrix downloaded . typical seurat analysis workflow like :","code":""},{"path":"https://obenno.github.io/scSpotlight/articles/scSpotlight.html","id":"invoke-app","dir":"Articles","previous_headings":"","what":"Invoke App","title":"Introduction to scSpotlight","text":"start using scSpotlight, please use command access app via: 127.0.0.1:8081 default mode app processing. User also change mode viewer, allow illustrating dataset querying gene expressions: one needs load large dataset, use dataDir parameter mount data directory load Rds file directly.","code":"scSpotlight::run_app(options = list(port = 8081, host = \"0.0.0.0\")) scSpotlight::run_app(options = list(port = 8081, host = \"0.0.0.0\"), runningMode = \"viewer\") scSpotlight::run_app(options = list(port = 8081, host = \"0.0.0.0\"), runningMode = \"viewer\", dataDir = \"/path/to/data_directory\")"},{"path":"https://obenno.github.io/scSpotlight/articles/scSpotlight.html","id":"main-panel","dir":"Articles","previous_headings":"","what":"Main Panel","title":"Introduction to scSpotlight","text":"Main panel scSpotlight like:","code":""},{"path":"https://obenno.github.io/scSpotlight/articles/scSpotlight.html","id":"input-files","dir":"Articles","previous_headings":"","what":"Input Files","title":"Introduction to scSpotlight","text":"“processing” mode, scSpotlight supports compressed file containing typical 10X cellranger output (Matrix Market Format): processed Seurat object seurat_processed.Rds saved [Seurat::SaveSeuratRds()]. using compressed matrix file input, scSpotlight process data loading without cell filtration dimension reduction shown.","code":"$ tar -tvf PBMC_demo.tar.gz drwxrwxr-x xzx/xzx           0 2024-01-11 21:11 PBMC_demo/ -rw-r--r-- xzx/xzx    67972057 2024-01-11 21:10 PBMC_demo/matrix.mtx.gz -rw-r--r-- xzx/xzx      294722 2024-01-11 21:10 PBMC_demo/features.tsv.gz -rw-r--r-- xzx/xzx       46443 2024-01-11 21:10 PBMC_demo/barcodes.tsv.gz"},{"path":"https://obenno.github.io/scSpotlight/articles/scSpotlight.html","id":"filter-cells","dir":"Articles","previous_headings":"","what":"Filter Cells","title":"Introduction to scSpotlight","text":"scSpotlight automatically illustrate nGene (nFeature_RNA), nUMI (nCount_RNA), mitochondrial gene UMI percentage (percent.mt) ribosomal protein gene UMI percentage (percent.rp) cell VlnPlot panel. One inspect distribution roughly evaluate library quality. User discard cells many features detected dying cells high mitochondrial UMI percentage adjusting parameters “Cell Filtering” block. filtration step also update highly variable genes (HVGs), dimension reduction cell clustering result.","code":""},{"path":"https://obenno.github.io/scSpotlight/articles/scSpotlight.html","id":"highly-variable-features","dir":"Articles","previous_headings":"","what":"Highly variable features","title":"Introduction to scSpotlight","text":"User able adjust highly variable gene selection method","code":""},{"path":[]},{"path":"https://obenno.github.io/scSpotlight/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Zhixia Xiao. Author, maintainer.","code":""},{"path":"https://obenno.github.io/scSpotlight/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Xiao Z (2024). scSpotlight: Single Cell Analysis Shiny App. R package version 0.0.2.9000, https://github.com/obenno/scSpotlight, https://obenno.github.io/scSpotlight/.","code":"@Manual{,   title = {scSpotlight: A Single Cell Analysis Shiny App},   author = {Zhixia Xiao},   year = {2024},   note = {R package version 0.0.2.9000, https://github.com/obenno/scSpotlight},   url = {https://obenno.github.io/scSpotlight/}, }"},{"path":"https://obenno.github.io/scSpotlight/index.html","id":"scspotlight-","dir":"","previous_headings":"","what":"A Single Cell Analysis Shiny App","title":"A Single Cell Analysis Shiny App","text":"goal scSpotlight simplify single cell analysis easily annotate dataset curated cell type markers. scSpotlight built shiny, Seurat regl-scatterplot.","code":""},{"path":"https://obenno.github.io/scSpotlight/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A Single Cell Analysis Shiny App","text":"can install development version scSpotlight GitHub : much faster installation pak:","code":"# install.packages(\"devtools\") devtools::install_github(\"obenno/scSpotlight\") # install.packages(\"pak\") pak::pkg_install(\"obenno/scSpotlight\")"},{"path":"https://obenno.github.io/scSpotlight/index.html","id":"docker","dir":"","previous_headings":"","what":"Docker","title":"A Single Cell Analysis Shiny App","text":"pull latest image command line run app port:8081, please use command :","code":"docker pull registry-intl.cn-hangzhou.aliyuncs.com/thunderbio/scspotlight:0.0.2 docker run -p 8081:8081 registry-intl.cn-hangzhou.aliyuncs.com/thunderbio/scspotlight:0.0.2 Rscript -e 'scSpotlight::run_app(options = list(port=8081, host=\"0.0.0.0\", launch.browser = FALSE), runningMode=\"processing\")'"},{"path":"https://obenno.github.io/scSpotlight/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::[\\%>\\%][magrittr::pipe] details.","code":""},{"path":"https://obenno.github.io/scSpotlight/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://obenno.github.io/scSpotlight/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://obenno.github.io/scSpotlight/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://obenno.github.io/scSpotlight/reference/run_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the scSpotlight App — run_app","title":"Run the scSpotlight App — run_app","text":"Run scSpotlight App","code":""},{"path":"https://obenno.github.io/scSpotlight/reference/run_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the scSpotlight App — run_app","text":"","code":"run_app(   onStart = set_options,   options = list(),   enableBookmarking = NULL,   uiPattern = \"/\",   dataDir = NULL,   runningMode = \"processing\",   maxSize = 20 * 1000 * 1024^2,   nCores = 2,   ... )"},{"path":"https://obenno.github.io/scSpotlight/reference/run_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the scSpotlight App — run_app","text":"onStart function called app actually run. needed shinyAppObj, since shinyAppDir case, global.R file can used purpose. options Named options passed runApp call (can following: \"port\", \"launch.browser\", \"host\", \"quiet\", \"display.mode\" \"test.mode\"). can also specify width height parameters provide hint embedding environment ideal height/width app. enableBookmarking Can one \"url\", \"server\", \"disable\". default value, NULL, respect setting previous calls  enableBookmarking(). See enableBookmarking() information bookmarking app. uiPattern regular expression applied GET request determine whether ui used handle request. Note entire request path must match regular expression order match considered successful. dataDir Direcotry path input data, user put large dataset direcoty avoid uploading files runningMode running mode app. \"processing\" (default) \"viewer\". \"processing\" mode allows users process input data Seurat package \"viewer\" mode, user able view dimension reduction result query gene expressions. maxSize Maximum allowed total size (bytes) global variables identified, see future.globals.maxSize. nCores Number threads use (future::plan()). ... arguments pass golem_opts. See ?golem::get_golem_options details.","code":""},{"path":"https://obenno.github.io/scSpotlight/reference/run_app.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run the scSpotlight App — run_app","text":"","code":"if (FALSE) {  ## Run app in processing mode  run_app()   ## Run app in viewer mode and load data in dataDir  run_app(runningMode = \"viewer\", dataDir = \"/path/to/data\")   ## Run app on port 8081, shiny::runApp() options need to be wrapped in a list  run_app(options = list(port = 8081, host =\"0.0.0.0\", launch.browser = FALSE), runningMode = \"processing\") }"},{"path":"https://obenno.github.io/scSpotlight/reference/scSpotlight-package.html","id":null,"dir":"Reference","previous_headings":"","what":"scSpotlight: A Single Cell Analysis Shiny App — scSpotlight-package","title":"scSpotlight: A Single Cell Analysis Shiny App — scSpotlight-package","text":"single cell analysis (viewer) app based Seurat.","code":""},{"path":[]},{"path":"https://obenno.github.io/scSpotlight/reference/scSpotlight-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"scSpotlight: A Single Cell Analysis Shiny App — scSpotlight-package","text":"Maintainer: Zhixia Xiao obennoname@gmail.com","code":""},{"path":"https://obenno.github.io/scSpotlight/news/index.html","id":"scspotlight-0029000","dir":"Changelog","previous_headings":"","what":"scSpotlight 0.0.2.9000","title":"scSpotlight 0.0.2.9000","text":"Initial release app","code":""}]
